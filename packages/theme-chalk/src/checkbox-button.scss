@use 'sass:map';
@use 'mixins/mixins.scss' as *;
@use 'common/var.scss' as *;
@use 'mixins/button.scss' as *;
@include b(checkbox-button) {
    @include set-component-css-var('checkbox-button', $checkbox-button)
}
@include b(checkbox-button) {
    position: relative;
    display: inline-block;
    @include e(inner) {
        display: inline-block;
        border: getCssVar('border');
        background: map.get($button, 'bg-color');
        box-sizing: border-box;
        border-left-color: transparent;
        cursor: pointer;
        user-select: none;
        color: map.get($button, 'text-color');
        &:hover {
            color: getCssVar('color-primary');
        }
        @include button-size(
            map.get($button-padding-vertical, 'default') - $button-border-width,
            map.get($button-padding-horizontal, 'default') - $button-border-width,
            map.get($button-font-size, 'default'),
            0
        );
    }
    &.is-checked {
        & .#{$namespace}-checkbox-button__inner {
            color: getCssVar('checkbox-button-checked-text-color');
            background-color: getCssVar('checkbox-button-checked-bg-color');
            border-color: getCssVar('checkbox-button-checked-border-color');
        }
    }
    @include e(original) {
        opacity: 0;
        position: absolute;
        
    }
    &:first-child {
        .#{$namespace}-checkbox-button__inner {
            border-left: getCssVar('border');
            border-top-left-radius: getCssVar('border-radius-base');
            border-bottom-left-radius: getCssVar('border-radius-base');
        }
    }
    &:last-child {
        .#{$namespace}-checkbox-button__inner {
            border-top-right-radius: getCssVar('border-radius-base');
            border-bottom-right-radius: getCssVar('border-radius-base');
        }
    }
} 