@use 'mixins/mixins.scss' as *;
@use 'common/var.scss' as *;
@use 'sass:map';

$checkbox-height: $common-component-size;
$checkbox-font-size: (
    'large': 14px,
    'small': 12px
);
@include b(checkbox) {
    @include set-component-css-var('checkbox', $checkbox)
}
@include b(checkbox) {
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    height: map.get($checkbox-height, 'default');
    margin-right: 30px;
    @include  when(bordered) {
        padding: 0 map.get($checkbox-bordered-padding-right, 'default') - $border-width
                  0 map.get($checkbox-bordered-padding-left, 'default') - $border-width;
        border-radius: getCssVar('border-radius-base');
        border: getCssVar('border');
        box-sizing: border-box;
        &.is-checked {
            border-color: getCssVar('color-primary');
        }
    }
    @include e(input) {
        position: relative;
        display: inline-flex;
        @include when(disabled) {
            .#{$namespace}-checkbox__inner {
                background-color: getCssVar('checkbox-disabled-input-fill');
                border-color: getCssVar('checkbox-disabled-border-color');
                cursor: not-allowed;
            }
            &.is-checked {
                .#{$namespace}-checkbox__inner {
                    background-color: getCssVar('checkbox-disabled-checked-input-fill');
                    border-color: getCssVar('checkbox-disabled-checked-border-color');
                    &::after {
                        border-color: getCssVar('checkbox-disabled-checked-icon-color');
                    }
                }
            }
            &.is-indeterminate {
                .#{$namespace}-checkbox__inner {
                    background-color: getCssVar('checkbox-disabled-checked-input-fill');
                    border-color: getCssVar('checkbox-disabled-checked-border-color');
                    &::before {
                        background-color: getCssVar('checkbox-disabled-checked-icon-color');
                        border-color: getCssVar('checkbox-disabled-checked-icon-color');
                    }
                }
            }
            & + span.#{$namespace}-checkbox__label {
                color: getCssVar('disabled-text-color');
                cursor: not-allowed;
            }
        }
        @include when(checked) {
            .#{$namespace}-checkbox__inner {
                background-color: getCssVar('checkbox-checked-bg-color');
                border-color: getCssVar('checkbox-checked-input-border-color');
                &::after {
                    transform: rotate(45deg) scale(1);
                    border-color: getCssVar('checkbox-checked-icon-color');
                }
            }
            & + .#{$namespace}-checkbox__label {
                color: getCssVar('checkbox-checked-text-color')
            }
        }
        @include when(indeterminate) {
            .#{$namespace}-checkbox__inner {
                background-color: getCssVar('checkbox-checked-bg-color');
                border-color: getCssVar('checkbox-checked-input-border-color');
                &::before {
                    content: '';
                    position: absolute;
                    display: block;
                    height: 2px;
                    left: 0;
                    right: 0;
                    background-color: getCssVar('checkbox-checked-icon-color');
                    top: 5px;
                    transform: scale(0.5);
                }
                &::after {
                    display: none;
                }
            }
        }
    }
    @include e(original) {
        opacity: 0;
        position: absolute;
        width: 0;
        height: 0;
        margin: 0;
    }
    @include e(inner) {
        display: inline-block;
        position: relative;
        box-sizing: border-box;
        width: getCssVar('checkbox-input-width');
        height: getCssVar('checkbox-input-height');
        border: getCssVar('checkbox-input-border');
        border-radius: getCssVar('checkbox-border-radius');
        &:hover {
            border-color: getCssVar('checkbox-input-border-color-hover');
        }
        &::after  {
            position: absolute;
            content: '';
            width: 3px;
            height: 7px;
            border: 1px solid transparent;
            border-left: 0;
            border-top: 0;
            top: 1px;
            left: 4px;
            transform: rotate(45deg) scale(0);
            transform-origin: center;
        }
    }
    @include e(label) {
        margin-left: 8px;
        font-size: getCssVar('checkbox-font-size');
    }

    @each $size in (large, small) {
        &.#{$namespace}-checkbox--#{$size} {
            height: map.get($checkbox-height, $size);
            @include e(label) {
                font-size: map.get($checkbox-font-size, $size);
            }
            @include e(inner) {
                width: map.get($checkbox-font-size, $size);
                height: map.get($checkbox-font-size, $size);
            }
        }
    }
}