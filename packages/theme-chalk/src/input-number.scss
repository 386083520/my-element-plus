@use 'sass:map';
@use 'mixins/mixins.scss' as *;
@use 'common/var.scss' as *;
@include b(input-number) {
    width: 140px;
    position: relative;
    display: inline-flex;

    .#{$namespace}-input {
        &__wrapper {
            padding-left: #{map.get($input-height, 'default') + 10};
            padding-right: #{map.get($input-height, 'default') + 10};
        }
        &__inner {
            text-align: center;
            &::-webkit-inner-spin-button,
            ::-webkit-outer-spin-button {
                -webkit-appearance: none;
            }
        }
    }


    @include e((increase, decrease)) {
        position: absolute;
        top: 1px;
        bottom: 1px;
        width: map.get($input-height, 'default');
        cursor: pointer;

        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1;

        background: getCssVar('fill-color', 'light');
        color: getCssVar('text-color', 'regular');
        &:hover {
            color: getCssVar('color-primary');
            & ~ .#{$namespace}-input .#{$namespace}-input__wrapper {
                box-shadow: 0 0 0 1px map.get($input, 'focus-border-color') inset;
            }
        }
        &.is-disabled {
            cursor: not-allowed;
            color: getCssVar('disabled-text-color');
        }
    }
    @include e(increase) {
        right: 1px;
        border-radius: 0 getCssVar('border-radius-base') getCssVar('border-radius-base') 0;
        border-left: getCssVar('border');
    }
    @include e(decrease) {
        left: 1px;
        border-radius: getCssVar('border-radius-base') 0 0 getCssVar('border-radius-base');
        border-right: getCssVar('border');
    }
}
