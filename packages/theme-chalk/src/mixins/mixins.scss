@forward "./config.scss";
@use "./config.scss" as *;
@use "../common/var.scss" as *;
@use './function.scss' as *;
@forward './function.scss';

@mixin b($block) {
    $B: $namespace  + $common-separator + $block !global;
    .#{$B} {
        @content;
    }
}

@mixin e($element) {
    $currentSelector: $B + $element-separator + $element;
    $selector: &;
    @if hitAllSpecialNestRule($selector) {
        @at-root {
            #{$selector} {
                .#{$currentSelector} {
                    @content;
                }
            }
        }
    } @else {
        @at-root {
            .#{$currentSelector} {
                @content;
            }
        }
    } 
}
@mixin when($state) {
    &.#{$state-perfix + $state} {
        @content;
    }
}
@mixin m($modifier) {
    @at-root {
        #{& + $modifier-separator + $modifier} {
            @content;
        }
    }
}
@mixin res($key, $map:$breakpoints) {
    @if map-has-key($map, $key) {
        @media only screen and #{map-get($map, $key)} {
            @content;
        }
    } @else {
        @warn  "undefined points:`#{$map}`"
    }
}
