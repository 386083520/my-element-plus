@use 'sass:map';
@use 'mixins/mixins.scss' as *;
@use 'mixins/var.scss' as *;
@use 'common/var.scss' as *;

$radio-font-size: (
    'large': 14px,
    'small': 12px
);

@include b(radio) {
    @include set-component-css-var('radio', $radio)
}

@include b(radio) {
    margin-right: 32px;
    cursor: pointer;
    font-size: getCssVar('font-size', 'base');
    user-select: none;
    font-weight: getCssVar('radio-font-weight');
    height: map.get($radio-height, 'default');
    display: inline-flex;
    align-items: center;
    @each $size in (large,small) {
        &.#{$namespace}-radio--#{$size} {
            height: map.get($radio-height, $size);
            @include e(label) {
                font-size: map.get($radio-font-size, $size);
            }
            @include e(inner) {
                width: map.get($radio-font-size, $size);
                height: map.get($radio-font-size, $size);
            }
        }
    }
    @include when(bordered) {
        padding: 0 map.get($checkbox-bordered-padding-right, 'default')
                 0 map.get($checkbox-bordered-padding-left, 'default');
        border: getCssVar('border');
        border-radius: getCssVar('border-radius-base');
        &.is-checked {
            border-color: getCssVar('color-primary');

        }
        &.is-disabled {
            cursor: not-allowed;
            border-color: getCssVar('border-color-lighter');
        }
        @each $size in (large,small) {
            &.#{$namespace}-radio--#{$size} {
                padding: 0 map.get($checkbox-bordered-padding-right, $size)
                        0 map.get($checkbox-bordered-padding-left, $size);
            }
        }
    }
    @include e(input) {
        position: relative;
        vertical-align: middle;
        cursor: pointer;
        @include when(disabled) {
            .#{$namespace}-radio__inner {
                background-color: map.get($radio-disabled, 'input-fill');
                border-color: map.get($radio-disabled, 'input-border-color');
                cursor: not-allowed;
            }
            & + span.#{$namespace}-radio__label {
                color: getCssVar('text-color', 'placeholder');
                cursor: not-allowed;
            }
            &.is-checked {
                .#{$namespace}-radio__inner {
                    background-color: map.get($radio-disabled, 'checked-input-fill');
                    border-color: map.get($radio-disabled, 'checked-input-border-color');
                    &::after {
                        background-color: map.get($radio-disabled, 'checked-icon-color');
                    }
                }
            }
        }
        @include when(checked) {
            .#{$namespace}-radio__inner {
                border-color: map.get($radio-checked, 'input-border-color');
                background: map.get($radio-checked, 'icon-color');
                &::after {
                    transform: translate(-50%, -50%) scale(1);
                }
            }
            & + .#{$namespace}-radio__label {
                color: map.get($radio-checked, 'text-color');
            }
        }
    }
    @include e(original) {
        opacity: 0;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: -1;
    }
    @include e(inner) {
        width: getCssVar('radio-input-width');
        height: getCssVar('radio-input-height');
        display: inline-block;
        border: getCssVar('radio-input-border');
        border-radius: getCssVar('radio-input-border-radius');
        background-color: getCssVar('radio-input-bg-color');
        position: relative;
        &:hover {
            border-color: getCssVar('radio-input-border-color-hover');
        }
        &::after {
            width: 4px;
            height: 4px;
            border-radius: getCssVar('radio-input-border-radius');
            background-color: getCssVar('color-white');
            content: '';
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%,-50%) scale(0);
        }
    }

    @include e(label) {
        padding-left: 8px;
        font-size: getCssVar('font-size', 'base');
    }
}
